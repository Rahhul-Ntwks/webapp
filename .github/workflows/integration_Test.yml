name: Integration Tests - /v1/user Endpoint

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  integration_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'

      # Install PostgreSQL
      - name: Install PostgreSQL
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql
          sudo service postgresql start

      # Set up PostgreSQL user and database
      - name: Set up PostgreSQL user and database
        run: |
          if ! sudo -u postgres psql -tAc "SELECT 1 FROM pg_roles WHERE rolname='${{ secrets.POSTGRES_USER }}'"; then
            sudo -u postgres psql -c "CREATE USER ${{ secrets.POSTGRES_USER }} WITH PASSWORD '${{ secrets.POSTGRES_PASSWORD }}';"
          else
            echo "PostgreSQL user ${{ secrets.POSTGRES_USER }} already exists."
          fi
          
          if ! sudo -u postgres psql -lqt | cut -d \| -f 1 | grep -qw "${{ secrets.POSTGRES_DB }}"; then
            sudo -u postgres psql -c "CREATE DATABASE ${{ secrets.POSTGRES_DB }};"
            sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE ${{ secrets.POSTGRES_DB }} TO ${{ secrets.POSTGRES_USER }};"
          else
            echo "PostgreSQL database ${{ secrets.POSTGRES_DB }} already exists."
          fi
          
          echo "Set up PostgreSQL user and database"

      # Install dependencies
      - name: Install dependencies
        run: npm install

      # Run integration tests for /v1/user
      - name: Run integration tests for /v1/user
        env:
            POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        run: npx jest

      # Clean up PostgreSQL
      - name: Clean up PostgreSQL
        run: sudo service postgresql stop

